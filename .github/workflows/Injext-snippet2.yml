name: Inject Python Snippet

on:
  push:
    paths:
      - 'snippets/*.py'

jobs:
  inject-snippet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set target .md from latest .py
        run: |
          LATEST_PY=$(ls -t snippets/*.py | head -n 1)
          BASENAME=$(basename "$LATEST_PY" .py)
          TARGET_MD="${BASENAME%%_*}.md"
          echo "TARGET_MD=$TARGET_MD" >> $GITHUB_ENV
          echo "LATEST_PY=$LATEST_PY" >> $GITHUB_ENV

      - name: Inject Python Snippet
        run: |
          python scripts/inject_snippet.py "$TARGET_MD"

      - name: Execute Python and inject result with mocked input
        run: |
          OUTPUT=$(python - "$LATEST_PY" <<EOF
            import sys
            import builtins
            from unittest.mock import patch
            from io import StringIO
            
            # 出力をキャプチャ
            output = StringIO()
            sys.stdout = output
            
            with patch('builtins.input', return_value='太郎'):
                exec(open(sys.argv[1]).read(), {})
            
            sys.stdout = sys.__stdout__
            print(output.getvalue())
            EOF
            )
          
          echo -e '\n---\n\n### 実行結果\n\n```text\n'"$OUTPUT"'\n```' >> "$TARGET_MD"

      - name: Commit and Push if Changed
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add $TARGET_MD
          git diff --cached --quiet || git commit -m "Auto update article with new snippet"
          git push
          
